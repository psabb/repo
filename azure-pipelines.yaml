trigger:
- RFQ_DEMO_BRANCH
 
pool:
  vmImage: 'windows-latest'
 
variables:
  pythonVersion: '3.11.5'
 
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
    addToPath: true
 
- script: |
    pip install -r backend/requirements.txt
  displayName: 'Install Python dependencies'
 
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'
 
- script: |
    npm install --force
    npm run build
  displayName: 'npm install and build'
 

- task: ArchiveFiles@2
            displayName: 'Compress App'
            inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/${{ parameters.appName }}'
            includeRootFolder: false
            archiveFile: '$(Build.ArtifactStagingDirectory)/${{ parameters.appName }}.zip'
        - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
        - task: AzureFunctionApp@1
            displayName: 'Deploy ${{ parameters.appName }} to ${{ parameters.environment }}'
            inputs:
            azureSubscription: ${{ parameters.azureSubscriptionServiceConnectionName }}
            appType: functionAppLinux
            appName: ${{ parameters.appName }}-${{ parameters.environment }}
            package: $(Build.ArtifactStagingDirectory)/${{ parameters.appName }}.zip

## other stages, jobs and task

- stage: deploy_production
    displayName: 'Deploy App'
    jobs:
    - job: deploy1
        displayName: 'Deploying ${{ parameters.appName }}'
        pool:
        vmImage: 'windows-latest'
        steps:
        - download: current
            artifact: drop
        - task: AzureFunctionApp@1
            displayName: 'Deploy ${{ parameters.appName }}'
            inputs:
            azureSubscription: ${{ parameters.azureSubscriptionServiceConnectionName }}
            appType: functionAppLinux
            appName: ${{ parameters.appName }}-prd
            package: $(Pipeline.Workspace)/drop/${{ parameters.appName }}.zip